 (cd "$(git rev-parse --show-toplevel)" && git apply --3way <<'EOF' 
diff --git a/.gitignore b/.gitignore
index e43b0f988953ae3a84b00331d0ccf5f7d51cb3cf..e617da44861b1d57539c6a11e047a325b3d5d51f 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1 +1,3 @@
 .DS_Store
+node_modules/
+package-lock.json
diff --git a/indexlab/apps/app4/README.md b/indexlab/apps/app4/README.md
new file mode 100644
index 0000000000000000000000000000000000000000..88acd51afa930349d65705c6944160cfe2194c2b
--- /dev/null
+++ b/indexlab/apps/app4/README.md
@@ -0,0 +1,50 @@
+# Generador Modular de Melodías (aleatorizador)
+
+
+Aplicació web autosuficient que permet generar, editar i escoltar patrons
+melòdics de forma modular sobre qualsevol escala o mode.
+Es distribueix com a **site estàtic** (tot és HTML + CSS + JS a l’arrel del
+repo) i es publica automàticament a **GitHub Pages**:
+
+> https://playnuzic.github.io/aleatorizador/
+
+---
+
+## Funcionalitats principals
+
+| bloc | resum |
+| ---- | ----- |
+| **Motor de generació** | genera files de 8 notes a partir de vistes Na/Nm/Nº, intervals modulars o de grau. |
+| **Editor in-place** | doble clic a una casella ➜ edició del valor; es recalculen notes posteriors. |
+| **Escales i modes** | Rotació lliure de qualsevol mare (*Crom*, *Diat*, *Arm Menor*, etc.). |
+| **Playback** | Synth bàsic amb *Web Audio*; botó ▶ per fila, BPM ajustable. |
+| **Export MIDI** | Cada fila es pot descarregar com a fitxer .mid. |
+| **Presets ràpids** | Barra de 8 memòries (Alt + clic esborra, Shift + clic desa). |
+
+---
+Desenvolupament
+1. Clonar i instal·lar depenències opcionals
+git clone https://github.com/PlayNuzic/aleatorizador.git
+cd aleatorizador
+npm ci   # opcional – només si vols executar tests o linter
+
+2. Servidor local
+python3 -m http.server 8000
+
+3. Tests
+npm test          # només conté un placeholder; Jest està al package.json
+
+Entorn OpenAI Codex
+
+Es pot fer push directament des de l’entorn de Codex.
+	1.	A Settings → Environments crea un entorn i afegeix el secret GITHUB_TOKEN
+amb permisos repo.
+	2.	Utilitza el setup.sh del repo per preparar Git, Node i pinxar el token.
+	3.	Cada sessió de Codex quedarà llesta per a git add/commit/push.
+
+Recorda que, un cop acaba el setup.sh, la sessió perd accés a internet;
+totes les dependències que necessitis s’han d’instal·lar dins del setup.
+
+Llicència
+
+GPL-3.0 – © PlayNuzic
diff --git a/indexlab/apps/app4/css/styles.css b/indexlab/apps/app4/css/styles.css
new file mode 100644
index 0000000000000000000000000000000000000000..c1cae54be0bb68759b2a09b606fd84f990120bbf
--- /dev/null
+++ b/indexlab/apps/app4/css/styles.css
@@ -0,0 +1,47 @@
+    :root { --bg:#43433B; --fg:#EEE8D8; --accent:#E76F68; --accent2:#F28AAD;
+      --yellow:#FFBB33; --blue:#7BB4CD; --green:#7CD683; font-size:16px; }
+    * { box-sizing:border-box; margin:0; padding:0; }
+    body { background:var(--bg); color:var(--fg); font-family:'Ubuntu',sans-serif;
+      display:flex; flex-direction:column; align-items:center; padding:1rem; gap:1rem; }
+    h1 { font-weight:700; }
+    .toolbar { display:flex; align-items:center; flex-wrap:wrap; gap:.6rem; }
+    button, select, input { font-family:inherit; border:none; padding:.45rem .8rem;
+      border-radius:6px; cursor:pointer; font-size:1rem; }
+    button { background:var(--accent); color:var(--bg); transition:.2s; }
+    button:hover { background:var(--accent2); }
+    select, input { background:var(--fg); color:var(--bg); }
+    .main-content { display:flex; gap:1rem; align-items:flex-start; }
+    table { border-collapse:collapse; margin-top:.8rem; }
+    th, td { border:1px solid #ffffff35; padding:.55rem 1rem; text-align:center;
+      min-width:4rem; font-size:1.2rem; }
+    td:first-child, th:first-child { position:sticky; left:0; background:#00000028;
+      backdrop-filter:blur(3px); }
+    td[contenteditable] { outline:2px solid var(--accent); }
+    #presetBar { display:flex; gap:.45rem; margin:1rem 0; }
+    #presetBar button { width:2.6rem; height:2.6rem; font-weight:700; color:var(--bg);
+      transition:.2s; }
+    #presetBar button.empty { background:#555; }
+    #presetBar button.filled { background:var(--blue); }
+    #presetBar button.selected { background:var(--yellow); color:#000; font-weight:900; }
+    .slider-wrapper { display:flex; align-items:center; gap:.4rem; }
+    .slider-wrapper label { font-size:.95rem; }
+    .interval-legend-box { font-size:1rem; background:rgba(255,187,51,0.1);
+      border:1px solid var(--yellow); padding:0.5rem; margin-top:1rem; align-self:flex-start;
+      max-width:600px; }
+.row-op-cell { min-width:6rem; }
+.row-op-cell select { width:100%; }
+.midi-btn { margin-left:.4rem; }
+
+.global-params {
+  display:flex;
+  flex-wrap:wrap;
+  gap:.5rem;
+}
+
+.speech-bubble {
+  background:white;
+  color:black;
+  padding:0.5rem 1rem;
+  border-radius:8px;
+  margin-left:0.5rem;
+
diff --git a/indexlab/apps/app4/favicon.ico b/indexlab/apps/app4/favicon.ico
new file mode 100644
index 0000000000000000000000000000000000000000..192ce84ed98de49865bd7a5f460b9fd4ad2e1758
GIT binary patch
literal 11421
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
F{|6WO{^kGx

literal 0
HcmV?d00001

diff --git a/indexlab/apps/app4/index.html b/indexlab/apps/app4/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..a35360bf3e4b92ea4ee419b81e822768afaf5f06
--- /dev/null
+++ b/indexlab/apps/app4/index.html
@@ -0,0 +1,67 @@
+<!DOCTYPE html>
+<html lang="es">
+<head>
+  <meta charset="utf-8" />
+  <meta name="viewport" content="width=device-width, initial-scale=1" />
+  <title>Generador Modular de Melodías</title>
+
+  <!-- Tipografia i estils propis -->
+  <link href="https://fonts.googleapis.com/css2?family=Ubuntu:wght@300;700&display=swap" rel="stylesheet" />
+  <link rel="stylesheet" href="css/styles.css" />
+  <link rel="icon" href="favicon.ico" />
+  <script src="https://cdn.jsdelivr.net/npm/tone@14.7.77/build/Tone.js"></script>
+  <script src="../../shared/midi.js"></script>
+</head>
+
+<body>
+  <h1>Generador de Melodías Encontradas</h1>
+
+  <!-- toolbar + taula generador (ja existents) -->
+  <div class="toolbar">
+    <button id="btnRoll">Aleatorizar</button>
+    <label>Escala <select id="scaleSel"></select></label>
+    <button id="btnClear">Vaciar</button>
+    <label>Vista
+      <select id="viewSel">
+        <option>Na</option><option>Nm</option><option>Nº</option>
+        <option>iSm</option><option>iSº</option><option>iAm</option><option>iAº</option>
+      </select>
+    </label>
+    <label>BPM <input id="bpmInp" type="number" min="20" max="300" value="90" style="width:4.5rem" /></label>
+    <div class="slider-wrapper">
+      <label>Prob. octava
+        <input id="octProb" type="range" min="0" max="0.5" step="0.05" value="0.15" />
+      </label>
+      <span id="octProbVal">0.15</span>
+    </div>
+    <label>Modo/Rot. <select id="rotSel"></select></label>
+    <label>Raíz Nm <select id="rootSel"></select></label>
+    <div id="presetBar"></div>
+    <details class="global-params">
+      <summary>Parámetros</summary>
+      <label>iR
+        <select id="irSel"></select>
+      </label>
+      <label>CaDif
+        <input id="cadifInp" type="number" min="1" max="8" />
+      </label>
+      <label>Rango ±<input id="rangoInp" type="number" min="1" max="24" value="24" /></label>
+      <label><input id="dupChk" type="checkbox" checked /> Duplicados</label>
+      <label>Nota Salida <select id="startSel"></select></label>
+    </details>
+  </div>
+
+  <div class="main-content">
+    <table id="grid"></table>
+    <div class="interval-legend-box">
+      En las vistas de Nota se puede introducir notas y registros. En las vistas de intervalos, introduce un número para sumar/restar al intervalo; la casilla mostrará el resultado en pasos de Nm en intervalos modulares y en pasos de grado en intervalos de grado$
+    </div>
+  </div>
+
+  <!-- punt on es muntarà la mascota -->
+  <!-- Eliminada la mascota React -->
+
+<!-- el teu app clàssic -->
+<script src="js/app.js"></script>
+</body>
+</html>
diff --git a/indexlab/apps/app4/js/app.js b/indexlab/apps/app4/js/app.js
new file mode 100644
index 0000000000000000000000000000000000000000..6572dc3608a3c4ee254a4293dfd85ac246ac993b
--- /dev/null
+++ b/indexlab/apps/app4/js/app.js
@@ -0,0 +1,343 @@
+const randInt=(a,b)=>Math.floor(Math.random()*(b-a+1))+a;
+const clamp=(x,min,max)=>x<min?min:x>max?max:x;
+const wrapSym=(n,m)=>{const h=Math.floor(m/2);n=((n+h)%m+m)%m-h;return n===h?-h:n;};
+
+// SCALE DATA
+const motherScalesData={
+  CROM:{name:'Cromática',ee:Array(12).fill(1),rotNames:['Único']},
+  DIAT:{name:'Diatónica',ee:[2,2,1,2,2,2,1],rotNames:['Mayor','Dórica','Frigia','Lidia','Mixolidia','Eolia','Locria']},
+  ACUS:{name:'Acústica',ee:[2,2,2,1,2,1,2],rotNames:['Acústica','Mixol b6','Semidim','Alterada','Menor Mel.','Dórica b2','Lidia Aum']},
+  ARMm:{name:'Armónica Menor',ee:[2,1,2,2,1,3,1],rotNames:['Arm Menor','Locria Nat','Mayor Aum','Lidia Dim','Frigia Dom','Aeo Arm','Ultralocr']},
+  ARMM:{name:'Armónica Mayor',ee:[2,2,1,2,1,3,1],rotNames:['Arm Mayor','Dórica b5','Frigia b4','Lidia b3','Mixo b9','Lidia #2','Locria bb7']},
+  OCT:{name:'Octatónica',ee:[1,2,1,2,1,2,1,2],rotNames:['Modo 1','Modo 2']},
+  HEX:{name:'Hexatónica',ee:[1,3,1,3,1,3],rotNames:['Aumentada','Inversa']},
+  TON:{name:'Tonos',ee:[2,2,2,2,2,2],rotNames:['Único']}
+};
+const scaleIDs=Object.keys(motherScalesData);
+function scaleSemis(id){
+  if(!scaleSemis.cache) scaleSemis.cache={};
+  if(scaleSemis.cache[id]) return scaleSemis.cache[id];
+  let acc=0, arr=[0];
+  motherScalesData[id].ee.forEach(v=>{acc+=v; arr.push(acc%12);});
+  arr.pop(); scaleSemis.cache[id]=arr; return arr;
+}
+
+// STATE
+const ROWS=8, COLS=8;
+let state={
+  bpm:90,
+  view:'Na',
+  octProb:0.15,
+  scale:{id:'CROM', rot:0, root:0},
+  params:{iR:null, caDif:null, rango:24, duplicates:true, start:null},
+  naRows:[]
+};
+let presets=Array(8).fill(null), currentPreset=-1;
+
+// DOM REFERENCES
+const scaleSel=document.getElementById('scaleSel');
+const rotSel=document.getElementById('rotSel');
+const rootSel=document.getElementById('rootSel');
+const viewSel=document.getElementById('viewSel');
+const btnRoll=document.getElementById('btnRoll');
+const btnClear=document.getElementById('btnClear');
+const bpmInp=document.getElementById('bpmInp');
+const octProb=document.getElementById('octProb');
+const octProbVal=document.getElementById('octProbVal');
+const grid=document.getElementById('grid');
+const presetBar=document.getElementById('presetBar');
+const irSel=document.getElementById('irSel');
+const cadifInp=document.getElementById('cadifInp');
+const rangoInp=document.getElementById('rangoInp');
+const dupChk=document.getElementById('dupChk');
+const startSel=document.getElementById('startSel');
+
+// INITIALIZE SELECTORS
+scaleIDs.forEach(id=>scaleSel.add(new Option(`${id} – ${motherScalesData[id].name}`, id)));
+[...Array(12).keys()].forEach(i=>rootSel.add(new Option(i, i)));
+[...Array(12).keys()].forEach(i=>startSel.add(new Option(i, i)));
+for(let i=-24;i<=24;i++) irSel.add(new Option(i===0?'+0':(i>0?`+${i}`:`${i}`), i));
+irSel.insertBefore(new Option('Aleatorio',''), irSel.firstChild);
+startSel.insertBefore(new Option('Aleatorio',''), startSel.firstChild);
+function refreshRot(){
+  rotSel.innerHTML='';
+  motherScalesData[state.scale.id].rotNames.forEach((n,i)=>rotSel.add(new Option(`${i} – ${n}`, i)));
+  rotSel.value=state.scale.rot;
+}
+refreshRot();
+
+// CONVERSION UTILITY
+function absToDegInfo(abs){
+  const {id, rot, root}=state.scale;
+  const sems=scaleSemis(id).map(s=> (s+root)%12 );
+  const mod=(abs-root+1200)%12;
+  let best=0, diff=12;
+  sems.forEach((v,i)=>{const d=Math.abs(mod-v); if(d<diff){diff=d; best=i;}});
+  const len=sems.length;
+  const deg=(best-rot+len)%len;
+  const off=wrapSym(mod-sems[best],12);
+  return {deg, off};
+}
+
+// ROW GENERATORS
+function genNaRow(){ return Array.from({length:COLS}, ()=>randInt(0,96)); }
+function genNmRow(){ return Array.from({length:COLS}, ()=>{ let n=randInt(0,11), d=Math.random()<state.octProb?(Math.random()<0.5?12:-12):0; return clamp(4*12+n+d,0,96); }); }
+function genScaleDegreeRow(){ const sems=scaleSemis(state.scale.id); return Array.from({length:COLS}, ()=>{ let deg=randInt(0,sems.length-1), sem=(sems[(deg+state.scale.rot)%sems.length]+state.scale.root)%12, d=Math.random()<state.octProb?(Math.random()<0.5?12:-12):0; return clamp(4*12+sem+d,0,96); }); }
+function genISmRow(){ let v=randInt(0,96); return Array.from({length:COLS},(_,i)=>{ if(i===0) return v; let iv=randInt(-6,6); if(Math.random()<state.octProb) iv+=(Math.random()<0.5?12:-12); v=clamp(v+iv,0,96); return v; }); }
+function genIStepRow(){ const sems=scaleSemis(state.scale.id); let idx=randInt(0,sems.length-1), oct=4, sem=(sems[(idx+state.scale.rot)%sems.length]+state.scale.root)%12, v=clamp(oct*12+sem,0,96); return Array.from({length:COLS},(_,i)=>{ if(i===0) return v; let diff=randInt(-Math.floor(sems.length/2),Math.floor(sems.length/2)); if(Math.random()<state.octProb) diff+=(Math.random()<0.5?-sems.length:sems.length); idx=(idx+diff+sems.length)%sems.length; sem=(sems[(idx+state.scale.rot)%sems.length]+state.scale.root)%12; oct+=Math.sign(diff); v=clamp(oct*12+sem,0,96); return v; }); }
+
+function applyGlobalParams(row){
+  const p=state.params;
+  if(p.start!=null) row[0]=clamp(4*12+wrapSym(p.start,12),0,96);
+  const base=row[0];
+  const range=p.rango??24;
+  for(let i=0;i<row.length;i++) row[i]=clamp(row[i], base-range, base+range);
+  if(p.iR!=null) row[row.length-1]=clamp(base+p.iR, base-range, base+range);
+  if(!p.duplicates){
+    const used=new Set();
+    for(let i=0;i<row.length;i++){
+      let n=row[i], tries=0;
+      while(used.has(n)&&tries<50){
+        n=clamp(base+randInt(-range,range),0,96); tries++; }
+      row[i]=n; used.add(n);
+    }
+  }
+  if(p.caDif!=null){
+    const used=new Set();
+    for(let i=0;i<row.length;i++){
+      if(used.size<p.caDif){ used.add(row[i]); }
+      else if(!used.has(row[i])){ const arr=Array.from(used); row[i]=arr[randInt(0,arr.length-1)]; }
+    }
+  }
+  return row;
+}
+
+// PARSE CELL INPUT
+function parseCellInput(view,input,oldNa){ const parts=input.split(/r/i).map(s=>s.trim()); const value=parseInt(parts[0],10); const octave=parts[1]?parseInt(parts[1],10):Math.floor(oldNa/12); if(isNaN(value)) return oldNa; let newNa; switch(view){ case 'Na': newNa=clamp(value,0,96); break; case 'Nm': newNa=clamp(octave*12+wrapSym(value,12),0,96); break; case 'Nº':{ const sems=scaleSemis(state.scale.id), len=sems.length; const sem=(sems[(value+state.scale.rot+len)%len]+state.scale.root)%12; newNa=clamp(octave*12+sem,0,96); break; } case 'iSm': case 'iAm': newNa=clamp(oldNa+value,0,96); break; case 'iSº': case 'iAº':{ const info=absToDegInfo(oldNa), len=scaleSemis(state.scale.id).length; const newDeg=info.deg+value; const sem2=(scaleSemis(state.scale.id)[(newDeg+state.scale.rot+len)%len]+state.scale.root)%12; newNa=clamp(octave*12+sem2,0,96); break; } default: return oldNa;} return newNa; }
+
+// RENDER GRID
+function renderGrid(){
+  grid.innerHTML='';
+  const thead=document.createElement('thead');
+  const htr=document.createElement('tr');
+  htr.appendChild(document.createElement('th'));
+  for(let c=1;c<=COLS;c++){
+    const th=document.createElement('th');
+    th.textContent=c;
+    htr.appendChild(th);
+  }
+  thead.appendChild(htr);
+  grid.appendChild(thead);
+  const tb=document.createElement('tbody');
+  state.naRows.forEach((row,r)=>{
+    const tr=document.createElement('tr');
+    const td0=document.createElement('td');
+    const btn=document.createElement('button');
+    btn.textContent=playingRow.idx===r?'⏹':'▶';
+    btn.style.width='2.2rem';
+    btn.onclick=()=>{ playRow(r); renderGrid(); };
+    td0.appendChild(btn);
+    const midiBtn=document.createElement('button');
+    midiBtn.textContent='💾';
+    midiBtn.className='midi-btn';
+    midiBtn.onclick=()=>{ downloadRow(r); };
+    td0.appendChild(midiBtn);
+    tr.appendChild(td0);
+    row.forEach((n,c)=>{
+      const td=document.createElement('td');
+      let txt='';
+      switch(state.view){
+        case 'Na':
+          txt=n!=null?n:'';
+          break;
+        case 'Nm':
+          txt=n!=null?`${((n%12)+12)%12}r${Math.floor(n/12)}`:'';
+          break;
+        case 'Nº':
+          if(n!=null){
+            const di=absToDegInfo(n), oct=Math.floor(n/12);
+            const degStr=di.off===0?`${di.deg}`:di.off>0?`${di.deg}+${di.off}`:`${di.deg}-${Math.abs(di.off)}`;
+            txt=`${degStr}r${oct}`;
+          }
+          break;
+        case 'iSm':
+        case 'iAm':
+          if(c===0){
+            txt=n!=null?`${((n%12)+12)%12}r${Math.floor(n/12)}`:'';
+          }else{
+            txt=row[c]-row[c-1];
+          }
+          break;
+        case 'iSº':
+        case 'iAº':
+          if(c===0){
+            if(n!=null){
+              const di=absToDegInfo(n), oct=Math.floor(n/12);
+              const degStr=di.off===0?`${di.deg}`:di.off>0?`${di.deg}+${di.off}`:`${di.deg}-${Math.abs(di.off)}`;
+              txt=`${degStr}r${oct}`;
+            }
+          }else{
+            const prev=row[c-1], pi=absToDegInfo(prev), ci=absToDegInfo(n);
+            const offDiff=wrapSym(ci.off-pi.off,12);
+            const len=scaleSemis(state.scale.id).length;
+            const degDiff=wrapSym(ci.deg-pi.deg,len);
+            const octDiff=Math.floor(n/12)-Math.floor(prev/12);
+            const base=octDiff*len+degDiff;
+            txt=offDiff===0?`${base}`:offDiff>0?`${base}${'+'.repeat(offDiff)}`:`${base}${'-'.repeat(-offDiff)}`;
+          }
+          break;
+      }
+      td.textContent=txt;
+      td.contentEditable=true;
+      td.onfocus=()=>{
+        td.dataset.oldNa=row[c];
+        td.dataset.rowSnapshot=JSON.stringify(row);
+      };
+      td.onkeydown=e=>{ if(e.key==='Enter'){ e.preventDefault(); td.blur(); }};
+      td.onblur=()=>{
+        const v=td.textContent.trim();
+        const oldNa=parseFloat(td.dataset.oldNa);
+        if(v===''||v===String(oldNa)) return;
+        let parseView=state.view;
+        if(c===0 && ['iSm','iAm'].includes(state.view)) parseView='Nm';
+        if(c===0 && ['iSº','iAº'].includes(state.view)) parseView='Nº';
+        const newNa=parseCellInput(parseView,v,oldNa);
+        if(newNa===oldNa) return;
+        if(['iSm','iAm','iSº','iAº'].includes(state.view)){
+          const snap=JSON.parse(td.dataset.rowSnapshot);
+          const newRow=[...snap];
+          newRow[c]=newNa;
+          for(let k=c+1;k<newRow.length;k++){
+            const origDiff=snap[k]-snap[k-1];
+            newRow[k]=clamp(newRow[k-1]+origDiff,0,96);
+          }
+          state.naRows[r]=newRow;
+        } else {
+          state.naRows[r][c]=newNa;
+        }
+        renderGrid();
+      };
+      tr.appendChild(td);
+    });
+    const tdOp=document.createElement('td');
+    tdOp.classList.add('row-op-cell');
+    const opSelect=document.createElement('select');
+    ['0','1','-1','2','-2','3','-3','4','-4'].forEach(val=>{
+      const o=document.createElement('option');
+      o.value=val;
+      o.textContent=val==='0'?'R':(parseInt(val)>0?`+${val}`:val);
+      opSelect.appendChild(o);
+    });
+    opSelect.onchange=()=>{
+      const delta=parseInt(opSelect.value,10)*12;
+      state.naRows[r]=state.naRows[r].map(x=>x!=null?clamp(x+delta,0,96):null);
+      renderGrid();
+    };
+    tdOp.appendChild(opSelect);
+    tr.appendChild(tdOp);
+    tb.appendChild(tr);
+  });
+  grid.appendChild(tb);
+}
+
+// AUDIO PLAYBACK via Tone.js
+let sampler=null;
+const playingRow={idx:null};
+async function ensureSampler(){
+  if(!sampler){
+    sampler=new Tone.Sampler({
+      urls:{
+        A1:"A1.mp3", C2:"C2.mp3", "D#2":"Ds2.mp3", "F#2":"Fs2.mp3",
+        A2:"A2.mp3", C3:"C3.mp3", "D#3":"Ds3.mp3", "F#3":"Fs3.mp3",
+        A3:"A3.mp3", C4:"C4.mp3", "D#4":"Ds4.mp3", "F#4":"Fs4.mp3",
+        A4:"A4.mp3", C5:"C5.mp3", "D#5":"Ds5.mp3", "F#5":"Fs5.mp3",
+        A5:"A5.mp3", C6:"C6.mp3", "D#6":"Ds6.mp3", "F#6":"Fs6.mp3",
+        A6:"A6.mp3", C7:"C7.mp3"
+      },
+      release:1,
+      baseUrl:"https://tonejs.github.io/audio/salamander/"
+    }).toDestination();
+    await Tone.loaded();
+  }
+}
+
+function stopCurrent(){
+  Tone.Transport.stop();
+  playingRow.idx=null;
+}
+
+async function playRow(r){
+  if(playingRow.idx===r){ stopCurrent(); return; }
+  await ensureSampler();
+  stopCurrent();
+  const row=state.naRows[r], beat=60/state.bpm;
+  let t=0;
+  row.forEach(n=>{
+    sampler.triggerAttackRelease(Tone.Frequency(n+12,'midi'), beat, Tone.now()+t);
+    t+=beat;
+  });
+  playingRow.idx=r;
+}
+
+// MIDI EXPORT
+function downloadRow(r){ const data=rowToMidi(state.naRows[r],state.bpm); const blob=new Blob([data],{type:'audio/midi'}); const url=URL.createObjectURL(blob); const a=document.createElement('a'); a.href=url; a.download=`row-${r+1}.mid`; document.body.appendChild(a); a.click(); setTimeout(()=>{URL.revokeObjectURL(url); a.remove();},100); }
+
+// PRESETS
+function buildPresetBar(){ presetBar.innerHTML=''; presets.forEach((p,i)=>{ const b=document.createElement('button'); b.textContent=i+1; b.className=p?'filled':'empty'; if(i===currentPreset)b.classList.add('selected'); b.onclick=e=>{ if(e.altKey){ presets[i]=null; currentPreset=-1; buildPresetBar(); return;} if(e.shiftKey){ presets[i]=JSON.parse(JSON.stringify(state)); currentPreset=i; buildPresetBar(); return;} if(presets[i]){ state=JSON.parse(JSON.stringify(presets[i])); applyState();}}; presetBar.appendChild(b);});}
+
+// MAIN GENERATE
+function genRows(){
+  state.naRows=[];
+  for(let r=0;r<ROWS;r++){
+    let row;
+    switch(state.view){
+      case 'Na': row=genNaRow(); break;
+      case 'Nm': row=genNmRow(); break;
+      case 'Nº': row=genScaleDegreeRow(); break;
+      case 'iSm':
+      case 'iAm': row=genISmRow(); break;
+      case 'iSº':
+      case 'iAº': row=genIStepRow(); break;
+    }
+    state.naRows.push(applyGlobalParams(row));
+  }
+  renderGrid();
+  stopCurrent();
+}
+
+// EVENTS
+btnRoll.onclick=()=>{ genRows(); currentPreset=-1; buildPresetBar();};
+viewSel.onchange=e=>{ state.view=e.target.value; renderGrid();};
+bpmInp.onchange=e=>{ state.bpm=clamp(+bpmInp.value,20,300); ensureCtx()&&audioCtx.resume();};
+octProb.oninput=e=>{ state.octProb=parseFloat(octProb.value); octProbVal.textContent=state.octProb.toFixed(2);};
+scaleSel.onchange=e=>{ state.scale.id=e.target.value; refreshRot(); renderGrid();};
+rotSel.onchange=e=>{ state.scale.rot=+rotSel.value; renderGrid();};
+rootSel.onchange=e=>{ state.scale.root=+rootSel.value; renderGrid();};
+irSel.onchange=e=>{ state.params.iR=irSel.value===''?null:+irSel.value; genRows(); };
+cadifInp.onchange=e=>{ const v=cadifInp.value; state.params.caDif=v?+v:null; genRows(); };
+rangoInp.onchange=e=>{ state.params.rango=+rangoInp.value; genRows(); };
+dupChk.onchange=e=>{ state.params.duplicates=dupChk.checked; genRows(); };
+startSel.onchange=e=>{ state.params.start=startSel.value===''?null:+startSel.value; genRows(); };
+btnClear.onclick=e=>{ if(e.ctrlKey){ state.naRows=Array.from({length:ROWS},()=>Array(COLS).fill(null)); renderGrid(); return;} state.naRows.forEach(r=>r.fill(null)); renderGrid();};
+
+// INIT
+(function(){ state.naRows=Array.from({length:ROWS},()=>Array(COLS).fill(null)); applyState(); })();
+
+function applyState(){
+  scaleSel.value=state.scale.id;
+  refreshRot();
+  rotSel.value=state.scale.rot;
+  rootSel.value=state.scale.root;
+  viewSel.value=state.view;
+  octProb.value=state.octProb;
+  octProbVal.textContent=state.octProb.toFixed(2);
+  bpmInp.value=state.bpm;
+  irSel.value=state.params.iR==null?'' : state.params.iR;
+  cadifInp.value=state.params.caDif==null?'' : state.params.caDif;
+  rangoInp.value=state.params.rango;
+  dupChk.checked=state.params.duplicates;
+  startSel.value=state.params.start==null?'' : state.params.start;
+  renderGrid();
+  buildPresetBar();
+}
+
diff --git a/indexlab/apps/app4/js/midi.js b/indexlab/apps/app4/js/midi.js
new file mode 100644
index 0000000000000000000000000000000000000000..fa5bc1ec89c15d26a0ab4622621fc66c4ec5c9b9
--- /dev/null
+++ b/indexlab/apps/app4/js/midi.js
@@ -0,0 +1,35 @@
+function varInt(v){
+  const bytes=[];
+  let buffer=v&0x7F;
+  while(v>>=7){
+    buffer<<=8;
+    buffer|=(v&0x7F)|0x80;
+  }
+  while(true){
+    bytes.push(buffer&0xFF);
+    if(buffer&0x80) buffer>>=8;
+    else break;
+  }
+  return bytes;
+}
+
+function rowToMidi(row,bpm){
+  const tpq=480;
+  const tempo=Math.floor(60000000/bpm);
+  const events=[];
+  events.push(...varInt(0),0xFF,0x51,0x03,(tempo>>16)&255,(tempo>>8)&255,tempo&255);
+  events.push(...varInt(0),0xC0,0);
+  row.forEach(n=>{
+    events.push(...varInt(0),0x90,n+12,100);
+    events.push(...varInt(tpq),0x80,n+12,64);
+  });
+  events.push(...varInt(0),0xFF,0x2F,0x00);
+  const trackLen=events.length;
+  const track=[0x4d,0x54,0x72,0x6b,(trackLen>>24)&255,(trackLen>>16)&255,(trackLen>>8)&255,trackLen&255,...events];
+  const header=[0x4d,0x54,0x68,0x64,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x01,0x01,0xE0];
+  return new Uint8Array([...header,...track]);
+}
+
+if (typeof module !== 'undefined') {
+  module.exports = { rowToMidi };
+}
diff --git a/indexlab/apps/app4/package.json b/indexlab/apps/app4/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..93052d0b3d8a958c04450e0eae4361427dd715f8
--- /dev/null
+++ b/indexlab/apps/app4/package.json
@@ -0,0 +1,25 @@
+{
+  "name": "aleatorizador",
+  "version": "1.0.0",
+  "description": "Abans de fer servir Codex per generar codi o fer `git push`, cal executar:",
+  "main": "index.js",
+  "scripts": {
+    "test": "jest"
+  },
+  "repository": {
+    "type": "git",
+    "url": "https://github.com/PlayNuzic/aleatorizador.git"
+  },
+  "keywords": [],
+  "author": "",
+  "license": "ISC",
+  "type": "commonjs",
+  "bugs": {
+    "url": "https://github.com/PlayNuzic/aleatorizador/issues"
+  },
+  "homepage": "https://github.com/PlayNuzic/aleatorizador#readme"
+  ,
+  "devDependencies": {
+    "jest": "^29.6.0"
+  }
+}
diff --git a/indexlab/apps/app4/test/midi.test.js b/indexlab/apps/app4/test/midi.test.js
new file mode 100644
index 0000000000000000000000000000000000000000..e69315f101a80c8e0bc00aa7d486eb46b484a7e4
--- /dev/null
+++ b/indexlab/apps/app4/test/midi.test.js
@@ -0,0 +1,10 @@
+const { rowToMidi } = require('../../../shared/midi');
+
+test('rowToMidi creates a valid MIDI header and track', () => {
+  const data = rowToMidi([60, 62, 64], 120);
+  // "MThd" header
+  expect(Array.from(data.slice(0,4))).toEqual([0x4d,0x54,0x68,0x64]);
+  // "MTrk" marker at position 14
+  expect(Array.from(data.slice(14,18))).toEqual([0x4d,0x54,0x72,0x6b]);
+  expect(data instanceof Uint8Array).toBe(true);
+});
diff --git a/indexlab/shared/midi.js b/indexlab/shared/midi.js
new file mode 100644
index 0000000000000000000000000000000000000000..fa5bc1ec89c15d26a0ab4622621fc66c4ec5c9b9
--- /dev/null
+++ b/indexlab/shared/midi.js
@@ -0,0 +1,35 @@
+function varInt(v){
+  const bytes=[];
+  let buffer=v&0x7F;
+  while(v>>=7){
+    buffer<<=8;
+    buffer|=(v&0x7F)|0x80;
+  }
+  while(true){
+    bytes.push(buffer&0xFF);
+    if(buffer&0x80) buffer>>=8;
+    else break;
+  }
+  return bytes;
+}
+
+function rowToMidi(row,bpm){
+  const tpq=480;
+  const tempo=Math.floor(60000000/bpm);
+  const events=[];
+  events.push(...varInt(0),0xFF,0x51,0x03,(tempo>>16)&255,(tempo>>8)&255,tempo&255);
+  events.push(...varInt(0),0xC0,0);
+  row.forEach(n=>{
+    events.push(...varInt(0),0x90,n+12,100);
+    events.push(...varInt(tpq),0x80,n+12,64);
+  });
+  events.push(...varInt(0),0xFF,0x2F,0x00);
+  const trackLen=events.length;
+  const track=[0x4d,0x54,0x72,0x6b,(trackLen>>24)&255,(trackLen>>16)&255,(trackLen>>8)&255,trackLen&255,...events];
+  const header=[0x4d,0x54,0x68,0x64,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x01,0x01,0xE0];
+  return new Uint8Array([...header,...track]);
+}
+
+if (typeof module !== 'undefined') {
+  module.exports = { rowToMidi };
+}
 
EOF
)
